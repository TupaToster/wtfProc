.TH "processor/proc_head.h" 3 "Sat Oct 15 2022" "Version 2" "Soft cpu" \" -*- nroff -*-
.ad l
.nh
.SH NAME
processor/proc_head.h
.SH SYNOPSIS
.br
.PP
\fC#include 'D:\\los_projectados\\wtfProc\\lib\\globalization\&.h'\fP
.br
\fC#include <stdio\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <assert\&.h>\fP
.br
\fC#include <math\&.h>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBProc\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBProcDump\fP(cpu)"
.br
.ti -1c
.RI "#define \fBDEF_CMD\fP(name,  num,  arg,  code)   CMD_##name = num,"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBreg\fP { \fBr0x\fP = 0, \fBrax\fP = 1, \fBrbx\fP = 2, \fBrcx\fP = 3, \fBrdx\fP = 4 }"
.br
.ti -1c
.RI "enum \fBmasks\fP { \fBMASK_RAM\fP = 1<<7, \fBMASK_REG\fP = 1<<6, \fBMASK_IMM\fP = 1<<5, \fBMASK_CMD\fP = (1<<5) - 1, \fBMASK_RAM\fP = 1<<7, \fBMASK_REG\fP = 1<<6, \fBMASK_IMM\fP = 1<<5, \fBMASK_CMD\fP = (1<<5) - 1 }"
.br
.ti -1c
.RI "enum \fBCMD\fP "
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "char * \fBhandleComLine\fP (int argc, char *argv[])"
.br
.ti -1c
.RI "void \fBProcCtor\fP (\fBProc\fP *cpu)"
.br
.ti -1c
.RI "void \fBProcDtor\fP (\fBProc\fP *cpu)"
.br
.ti -1c
.RI "\fBelem_t\fP * \fBhandleArg\fP (\fBProc\fP *cpu)"
.br
.ti -1c
.RI "void \fBProcDumpInside\fP (\fBProc\fP *cpu)"
.br
.ti -1c
.RI "void \fBcheckFileSign\fP (\fBProc\fP *cpu)"
.br
.ti -1c
.RI "void \fBProcRunCode\fP (\fBProc\fP *cpu)"
.br
.ti -1c
.RI "\fBelem_t\fP \fBgetValueArg\fP (\fBProc\fP *cpu)"
.br
.ti -1c
.RI "\fBelem_t\fP * \fBgetPtrArg\fP (\fBProc\fP *cpu)"
.br
.ti -1c
.RI "int \fBgetIpArg\fP (\fBProc\fP *cpu)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "char \fBProc_version\fP [3]"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define DEF_CMD(name, num, arg, code)   CMD_##name = num,"

.PP
Definition at line 37 of file proc_head\&.h\&.
.SS "#define ProcDump(cpu)"
\fBValue:\fP
.PP
.nf
    StackDump (cpu->stk);    \
    StackDump (cpu->funcIp); \
    ProcDumpInside (cpu);    \
.fi
.PP
Definition at line 12 of file proc_head\&.h\&.
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBCMD\fP"

.PP
Definition at line 34 of file proc_head\&.h\&.
.SS "enum \fBmasks\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIMASK_RAM \fP\fP
.TP
\fB\fIMASK_REG \fP\fP
.TP
\fB\fIMASK_IMM \fP\fP
.TP
\fB\fIMASK_CMD \fP\fP
.TP
\fB\fIMASK_RAM \fP\fP
.TP
\fB\fIMASK_REG \fP\fP
.TP
\fB\fIMASK_IMM \fP\fP
.TP
\fB\fIMASK_CMD \fP\fP
.PP
Definition at line 26 of file proc_head\&.h\&.
.SS "enum \fBreg\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIr0x \fP\fP
.TP
\fB\fIrax \fP\fP
.TP
\fB\fIrbx \fP\fP
.TP
\fB\fIrcx \fP\fP
.TP
\fB\fIrdx \fP\fP
.PP
Definition at line 17 of file proc_head\&.h\&.
.SH "Function Documentation"
.PP 
.SS "void checkFileSign (\fBProc\fP * cpu)"

.PP
Definition at line 64 of file proc_funcs\&.cpp\&.
.SS "int getIpArg (\fBProc\fP * cpu)"

.PP
Definition at line 142 of file proc_funcs\&.cpp\&.
.SS "\fBelem_t\fP* getPtrArg (\fBProc\fP * cpu)"

.PP
Definition at line 110 of file proc_funcs\&.cpp\&.
.SS "\fBelem_t\fP getValueArg (\fBProc\fP * cpu)"

.PP
Definition at line 86 of file proc_funcs\&.cpp\&.
.SS "\fBelem_t\fP* handleArg (\fBProc\fP * cpu)"

.SS "char* handleComLine (int argc, char * argv[])"

.PP
Definition at line 5 of file proc_funcs\&.cpp\&.
.SS "void ProcCtor (\fBProc\fP * cpu)"

.PP
Definition at line 38 of file proc_funcs\&.cpp\&.
.SS "void ProcDtor (\fBProc\fP * cpu)"

.PP
Definition at line 53 of file proc_funcs\&.cpp\&.
.SS "void ProcDumpInside (\fBProc\fP * cpu)"

.PP
Definition at line 153 of file proc_funcs\&.cpp\&.
.SS "void ProcRunCode (\fBProc\fP * cpu)"

.PP
Definition at line 187 of file proc_funcs\&.cpp\&.
.SH "Variable Documentation"
.PP 
.SS "char Proc_version[3]\fC [extern]\fP"

.PP
Definition at line 3 of file proc_funcs\&.cpp\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Soft cpu from the source code\&.
